name: Deploy helm chart
description: "Deploy Helm chart inside aks"

inputs:
  # project inputs
  namespace:
    required: true
    description: The namespace on AKS
  release-name:
    required: true
    description: The release name of the chart
  values-file-name:
    required: true
    description: The values file name. (e.g. values-dev.yaml)
  chart-path:
    required: false
    description: The path to the chart. (defaults to helm/)
    default: "helm/"
  helm-upgrade-options:
    required: false
    description: options you can pass to helm upgrade command
    default: ''
  # AKS info
  aks-name:
    required: true
    description: The name of the cluster
  aks-resource-group:
    required: true
    description: The resource group of the cluster
  # Azure inputs
  client-id:
    required: true
    description: Azure Client ID
  subscription-id:
    required: true
    description: Azure Subscription ID
  tenant-id:
    required: true
    description: Azure Tenant ID

runs:
  using: "composite"
  steps:
    - name: Login
      uses: azure/login@89d153571fe9a34ed70fcf9f1d95ab8debea7a73
      with:
        client-id: ${{ inputs.client-id }}
        tenant-id: ${{ inputs.tenant-id }}
        subscription-id: ${{ inputs.subscription-id }}

    - name: Gets K8s context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{inputs.aks-resource-group}}
        cluster-name: ${{inputs.aks-name}}
        admin: 'false'
        use-kubelogin: 'true'

    - name: üõ†Ô∏è Helm configure repos
      shell: bash
      working-directory: ./${{ inputs.chart-path }}
      run: |
        helm repo add microservice-chart https://pagopa.github.io/aks-microservice-chart-blueprint
        helm dep build .
        echo "‚úÖ aks blueprint configured"

    - name: üöÄ Helm Deploy
      shell: bash
      working-directory: ./${{ inputs.chart-path }}
      run: |
        echo "üöÄ Launch helm deploy"

        helm upgrade --install \
          --namespace ${{ inputs.namespace }} \
          --values ./${{ inputs.values-file-name }} \
          --wait --timeout 5m0s \
          ${{inputs.helm-upgrade-options}} \
          ${{ inputs.release-name }} \
          ./

        echo "‚úÖ Helm deployed"
