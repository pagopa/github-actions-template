name: Deploy helm chart
description: "Deploy Helm chart inside aks"

inputs:
  # project inputs
  branch:
    required: true
    description: The branch to deploy
  namespace:
    required: true
    description: The namespace on AKS
  app_name:
    required: true
    description: The name of the application
  env:
    required: true
    description: The name of the environment
  helm_upgrade_options:
    required: false
    description: options you can pass to helm upgrade command
    default: ''
  # AKS info
  cluster_name:
    required: true
    description: The name of the cluster
  resource_group:
    required: true
    description: The resource group of the cluster
  # Azure inputs
  client_id:
    required: true
    description: Azure Client ID
  subscription_id:
    required: true
    description: Azure Subscription ID
  tenant_id:
    required: true
    description: Azure Tenant ID

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.branch}}

    - name: Login
      uses: azure/login@89d153571fe9a34ed70fcf9f1d95ab8debea7a73
      with:
        client-id: ${{ inputs.client_id }}
        tenant-id: ${{ inputs.tenant_id }}
        subscription-id: ${{ inputs.subscription_id }}

    - name: Set up kubelogin for non-interactive login
      uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: 'v0.0.24'

    - name: Gets K8s context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{inputs.resource_group}}
        cluster-name: ${{inputs.cluster_name}}
        admin: 'false'
        use-kubelogin: 'true'

    - uses: azure/setup-helm@v3
      with:
        version: 'v3.11.2'
      id: install_helm

    - name: Check helm
      shell: bash
      run: |
        helm version

    - name: üõ†Ô∏è Helm configure repos
      shell: bash
      working-directory: ./helm/devopslab/diego
      run: |
        helm repo add microservice-chart https://pagopa.github.io/aks-microservice-chart-blueprint
        helm dep build helm
        echo "‚úÖ aks blueprint configured as expected"

    - name: üöÄ Helm Deploy
      shell: bash
      working-directory: ./helm/devopslab/diego
      run: |
        pwd
        ls -la

        helm upgrade --namespace ${{ inputs.namespace }} \
          --install --values ./values-${{ inputs.env }}.yaml \
          ${{inputs.helm_upgrade_options}} --wait --timeout 5m0s \
          ${{ inputs.app_name }} ./
