name: Make Release
description: "Make a new release on GitHub"

inputs:
  github_token:
    required: true
    type: string
    description: Github Token with Admin privileges
  semver:
    required: true
    type: choice
    description: Select the new Semantic Version
    options:
      - major
      - minor
      - patch
      - buildNumber
      - skip
  beta:
    required: true
    type: boolean
    description: True if it is a beta version (update canary helm version)
  skip_ci:
    required: false
    type: boolean
    description: True you want skip the CI workflows on release commit
    default: true
  prerelease:
    required: false
    type: boolean
    description: True if it is a prerelease
    default: false
  only_tag:
    required: false
    type: boolean
    description: True to create only the Tag without the Release
    default: false


outputs:
  version:
    description: "New Version"
    value: ${{ steps.semver.outputs.new_version }}

runs:
  using: "composite"
  steps:
    - name: Input Log
      run: |
        echo "📝 Inputs"
        echo "semver: ${{ inputs.semver}}" 
        echo "skip_ci: ${{ inputs.skip_ci}}"
      shell: bash

    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      with:
        token: ${{ inputs.github_token }}

    - name: Set Node.js 16
      uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3
      with:
        node-version: 16.10.0

    - name: Set branch
      run: |
        echo "BRANCH=-${{github.ref_name}}" >> $GITHUB_ENV
      if: ${{ github.ref_name != 'main' }}
      shell: bash

    - id: get_version
      name: Get Version
      run: |
        PACKAGE_FILE="package.json"
        if [[ -f "$PACKAGE_FILE" ]]; then
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Bump Package Version
      id: bump
      uses: pagopa/github-actions-template/bump-semver@main
      with:
        semver: ${{ inputs.semver  }}
        current_version: ${{ env.version }}

    - id: semver
      name: New Version
      run: |   
        echo "new_version=${{ steps.bump.outputs.new_version}}${{env.BRANCH}}" >> $GITHUB_OUTPUT
      shell: bash


    - name: Helm Bump
      if: ${{ inputs.semver != 'skip' }}
      uses: pagopa/github-actions-template/helm-bump@main
      with:
        version: ${{ steps.semver.outputs.new_version }}
        beta: ${{ inputs.beta }}

    - name: Push New Version
      if: ${{ inputs.semver != 'skip' }}
      shell: bash
      run: |
        contents="$(jq '.version = "${{ steps.semver.outputs.new_version }}"' package.json)"
        echo -E "${contents}" > package.json
  
        git add .
        git config --global user.email "github-bot@pagopa.it"
        git config --global user.name "pagopa-github-bot"
        if [ "${{ inputs.skip_ci }}" = "true" ]; then
            git commit -m "Bump to version ${{ steps.semver.outputs.new_version }} [skip ci]" || exit 0
          else
            git commit -m "Bump to version ${{ steps.semver.outputs.new_version }}" || exit 0
        fi
        git push origin ${{ github.ref_name}}

    - name: Create Release
      uses: ncipollo/release-action@a2e71bdd4e7dab70ca26a852f29600c98b33153e # v1.12.0
      if: ${{ !inputs.only_tag }}
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        commit: ${{ (inputs.semver != 'skip' && github.ref_name) || '' }}
        tag: ${{ steps.semver.outputs.new_version }}
        name: Release ${{ steps.semver.outputs.new_version }}
        makeLatest: true
        generateReleaseNotes: true
        prerelease: ${{ inputs.prerelease }}
        allowUpdates: ${{ inputs.semver == 'skip' }}

    - name: Create Tag
      if: ${{ inputs.only_tag }}
      shell: bash
      run: |
        git tag ${{ steps.semver.outputs.new_version }}
        git push origin ${{ steps.semver.outputs.new_version }}
