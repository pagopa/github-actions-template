name: Bump Semver
description: "bump the version in input with semantic version"

inputs:
  current_version:
    required: true
    type: string
    description: The current version
  semver:
    required: true
    type: string
    description: The semantic version

outputs:
  new_version:
    description: "New Version"
    value: ${{ steps.bump_version.outputs.result }}

runs:
  using: "composite"
  steps:
    - name: Bump version
      id: bump_version
      uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0 # v6.3.3
      env:
        CURRENT_VERSION: ${{inputs.current_version}}
        SEMVER: ${{inputs.semver}}
      with:
        result-encoding: string
        script: |
          var { CURRENT_VERSION, SEMVER } = process.env
          var versions = CURRENT_VERSION.replace('v','').split('.');
          
          var v0 = versions[0] ?? '0';
          var v1 = versions[1] ?? '0';
          var vaux = (versions[2] ?? '0');
          var v2 = vaux.split('-')[0] ?? '0';
          var v3 = vaux.split('-')[1] ?? '0';
          
          var major = parseInt(v0) || 0;
          var minor = parseInt(v1) || 0;
          var patch = parseInt(v2) || 0;
          var buildNumber = parseInt(v3) || 0;

          var newVersion = "";

          if (SEMVER == 'major'){
            newVersion = (major + 1) + '.0.0' 
          }
          if (SEMVER == 'minor'){
            newVersion = major.toString() + '.' + (minor + 1) + '.0' 
          } 
          if (SEMVER == 'patch'){
            newVersion = major.toString() + '.' + minor.toString() + '.' + (patch + 1)
          }
          if (SEMVER == 'buildNumber'){
            newVersion = major.toString() + '.' + minor.toString() + '.' + patch.toString() + '-' + (buildNumber + 1)
          }
          if (SEMVER == 'skip'){
            newVersion = CURRENT_VERSION
          }
          console.log('new version: ' + newVersion);
          return newVersion;


