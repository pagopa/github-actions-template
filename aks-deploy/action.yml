name: Deploy helm chart
description: "Check the size of a Pull Request" 

inputs:
  branch:
    required: true
    description: The branch to deploy
    type: string
  client_id:
    required: true
    description: Azure Client ID
    type: string
  subscription_id:
    required: true
    description: Azure Subscription ID
    type: string
  tenant_id:
    required: true
    description: Azure Tenant ID
    type: string
  env:
    required: true
    description: The name of the environment where to deploy
    type: choice
    options:
      - dev
      - uat
      - prod
  namespace:
    required: true
    description: The namespace on AKS
    type: string
  cluster_name:
    required: true
    description: The name of the cluster
    type: string
  resource_group:
    required: true
    description: The resource group of the cluster
    type: string
  app_name:
    required: true
    description: The name of the application
    type: string
  helm_upgrade_options:
    required: false
    description: options you can pass to helm upgrade command
    type: string
    default: ''
  working_directory:
    required: false
    description: working directory where run command is executed
    type: string
    default: ''
  timeout:
    required: false
    description: to set the timeout for the helm upgrade command
    type: string
    default: '5m0s'

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      with:
        ref: ${{ inputs.branch}}

    - name: Login
      uses: azure/login@89d153571fe9a34ed70fcf9f1d95ab8debea7a73
      with:
        client-id: ${{ inputs.CLIENT_ID }}
        tenant-id: ${{ inputs.TENANT_ID }}
        subscription-id: ${{ inputs.SUBSCRIPTION_ID }}

    - name: Gets K8s context
      uses: azure/aks-set-context@4edaee69f820359371ee8bc85189ac03a21d3a58 # v3
      with:
        resource-group: ${{inputs.resource_group}}
        cluster-name: ${{inputs.cluster_name}}
        admin: 'false'
        use-kubelogin: 'true'

    - name: Determine Working Directory
      id: determine-dir
      shell: bash
      run: |
        if [ -n "${{ inputs.working_directory }}" ]; then
          echo "working_dir=${{ inputs.working_directory }}" >> $GITHUB_ENV
        else
          echo "working_dir=." >> $GITHUB_ENV
        fi
        echo "Working directory determined: $working_dir"

    - name: üõ†Ô∏è Helm configure repos
      shell: bash
      working-directory: ${{ env.working_dir }}
      run: |
        echo "CONFIG REPO - CURRENT DIR $PWD"
        ls -la
        helm repo add microservice-chart https://pagopa.github.io/aks-microservice-chart-blueprint
        helm dep build helm
        echo "‚úÖ aks blueprint configured"

    - name: üöÄ Helm Deploy
      shell: bash
      working-directory: ${{ env.working_dir }}
      run: |
        echo "CURRENT DIR $PWD"
        ls -la
        echo "üöÄ Launch helm deploy"

        helm upgrade --namespace ${{ inputs.namespace }} \
          --install --values ./helm/values-${{ inputs.env }}.yaml \
          ${{inputs.helm_upgrade_options}} \
          --wait --timeout ${{inputs.timeout}} \
          ${{ inputs.app_name }} ./helm
        
        echo "‚úÖ Helm deployed"

