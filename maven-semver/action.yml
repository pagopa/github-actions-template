name: Semver
description: "Semantic Versioning"

inputs:
  semver:
    required: true
    type: choice
    description: Select the new Semantic Version
    options:
      - major
      - minor
      - patch
      - buildNumber
      - skip
  beta:
    required: true
    type: boolean
    description: True if it is a beta version (update canary helm version)


outputs:
  version:
    description: "New App Version"
    value: ${{ steps.get_app_version.outputs.version }}
  chart_version:
    description: "New Chart Version"
    value: ${{ steps.get_chart_version.outputs.chart_version }}

runs:
  using: "composite"
  steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.8.2
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set branch
      run: |
        echo "BRANCH=-${{github.ref_name}}" >> $GITHUB_ENV
      if: ${{ github.ref_name != 'main' }}
      shell: bash

    - name: Set build-number
      run: |
        mvn build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}-${parsedVersion.nextBuildNumber}${{env.BRANCH}}'
      if: ${{ inputs.semver == 'buildNumber' }}
      shell: bash

    - name: Set major
      run: |
        mvn build-helper:parse-version versions:set -DnewVersion='${parsedVersion.nextMajorVersion}.0.0${{env.BRANCH}}'
      if: ${{ inputs.semver == 'major' }}
      shell: bash

    - name: Set minor
      run: |
        mvn build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.nextMinorVersion}.0${{env.BRANCH}}'
      if: ${{ inputs.semver == 'minor' }}
      shell: bash

    - name: Set patch
      run: |
        mvn build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.nextIncrementalVersion}${{env.BRANCH}}'
      if: ${{ inputs.semver == 'patch' }}
      shell: bash

    - id: get_app_version
      name: Get Version
      run: |
        echo "$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)"
        echo "version=$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
      shell: bash

    - id: get_chart_version
      name: Get Version
      run: |
        CHART_FILE="helm/Chart.yaml"
        if [[ -f "$CHART_FILE" ]]; then
          echo "chart_version=$(yq -r ".version" "$CHART_FILE")" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Bump Chart Version
      id: bump_chart_version
      if: ${{ inputs.semver != 'skip' }}
      uses: pagopa/github-actions-template/bump-semver@main
      with:
        semver: ${{ (inputs.beta == 'true' && 'patch') || 'minor' }}
        current_version: ${{ env.chart_version }}

    - name: Update Chart Version
      if: ${{ inputs.semver != 'skip' }}
      shell: bash
      run: |
        CHART_FILE="helm/Chart.yaml"
        if [[ -f "$CHART_FILE" ]]; then
          yq -i ".version = \"${{ steps.bump_chart_version.outputs.new_version }}\"" "$CHART_FILE"
          git add "$CHART_FILE"
        fi

    - name: Update Stable Version Helm
      if: ${{ (inputs.beta != 'true') && (inputs.semver != 'skip')  }}
      shell: bash
      run: |
        CHART_FILE="helm/Chart.yaml"
        if [[ -f "$CHART_FILE" ]]; then
          yq -i ".appVersion = \"${{ steps.get_app_version.outputs.version }}\"" "$CHART_FILE"
          git add "$CHART_FILE"
        fi
        for i in helm/values-*.yaml; do
          [ -f "$i" ] || break
          yq -i ".microservice-chart.image.tag = \"${{ steps.get_app_version.outputs.version }}\"" "$i"
          git add "$i"
        done

    - name: Update Canary Version Helm
      if: ${{ inputs.semver != 'skip' }}
      shell: bash
      run: |
        CHART_FILE="helm/Chart.yaml"
        if [[ -f "$CHART_FILE" ]]; then
          yq -i ".appVersion = \"${{ steps.get_app_version.outputs.version }}\"" "$CHART_FILE"
          git add "$CHART_FILE"
        fi
        for i in helm/values-*.yaml; do
          [ -f "$i" ] || break
          yq -i ".microservice-chart.canaryDelivery.deployment.image.tag = \"${{ steps.get_app_version.outputs.version }}\"" "$i"
          git add "$i"
        done

    - name: Update Openapi/Swagger Version
      if: ${{ inputs.semver != 'skip' }}
      shell: bash
      run: |
        for i in openapi/*.json; do
          [ -f "$i" ] || break
          cat <<< "$(jq ".info.version = \"${{ steps.get_app_version.outputs.version }}\"" "$i")" > "$i"
          git add $i
        done
        for i in openapi/*.yaml; do
          [ -f "$i" ] || break
          yq -i ".info.version = \"${{ steps.get_app_version.outputs.version }}\"" "$i"
          git add "$i"
        done
        for i in openapi/*.yml; do
          [ -f "$i" ] || break
          yq -i ".info.version = \"${{ steps.get_app_version.outputs.version }}\"" "$i"
          git add "$i"
        done


