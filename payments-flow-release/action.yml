name: 🚀 Payments Release
description: 🚀 Payments Release + Docker image

inputs:
  current_branch:
    description: Branch used to launch the action
    required: true
  github_pat:
    description: Personal GitHub token for packages
    required: false
    default: ''
  docker_build: 
    description: Docker build
    required: false
    default: "true"
  docker_labels:
    description: Labels for docker push
    required: false
    default: |
      maintainer=https://pagopa.it
      org.opencontainers.image.source=https://github.com/${{ github.repository }}

runs:
  using: "composite"
  steps:
    - name: 🔨 Set release tag format
      id: set-tag-format
      shell: bash
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          echo "TAG_FORMAT=develop-v\${version}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/uat" ]]; then
          echo "TAG_FORMAT=uat-v\${version}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "TAG_FORMAT=v\${version}" >> $GITHUB_OUTPUT
        fi

    # Set the appropriate token
    - name: 🔐 Set GitHub Token
      id: set_token
      shell: bash
      run: |
        if [ -n "${{ inputs.github_pat }}" ]; then
          echo "GITHUB_AUTH_TOKEN=${{ inputs.github_pat }}" >> $GITHUB_OUTPUT
        else
          echo "GITHUB_AUTH_TOKEN=${{ github.token }}" >> $GITHUB_OUTPUT
        fi

    - name: 🚀 Release
      id: release
      uses: pagopa/eng-github-actions-iac-template/global/release-action@main
      with:
        github_token: ${{ steps.set_token.outputs.GITHUB_AUTH_TOKEN }}
        tag_format: ${{ steps.set-tag-format.outputs.TAG_FORMAT }}
        branches: ${{ github.ref_name }}

    #
    # Docker
    #
    - name: 🔨 Set Docker tags
      id: set_docker_tags
      if: steps.release.outputs.new_release_published == 'true' && inputs.docker_build == 'true'
      shell: bash
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          # develop-latest, develop-vx.y.z, latest
          echo "DOCKER_TAGS=ghcr.io/${{ github.repository }}:develop-v${{ steps.release.outputs.new_release_version }},ghcr.io/${{ github.repository }}:develop-latest,ghcr.io/${{ github.repository }}:latest" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/uat" ]]; then
          # uat-vx.y.z, uat-latest
          echo "DOCKER_TAGS=ghcr.io/${{ github.repository }}:uat-v${{ steps.release.outputs.new_release_version }},ghcr.io/${{ github.repository }}:uat-latest" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          # vx.y.z, latest
          echo "DOCKER_TAGS=ghcr.io/${{ github.repository }}:v${{ steps.release.outputs.new_release_version }}" >> $GITHUB_OUTPUT
        fi

    - name: 🛃 Log in to the Github Container registry
      id: docker_login
      if: steps.release.outputs.new_release_published == 'true' && inputs.docker_build == 'true'
      uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 #v3.2.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ steps.set_token.outputs.GITHUB_AUTH_TOKEN }}

    - name: 📦 Build and push Docker image with release version
      id: docker_build_push
      if: steps.release.outputs.new_release_published == 'true' && inputs.docker_build == 'true'
      uses: docker/build-push-action@1a162644f9a7e87d8f4b053101d1d9a712edc18c #v6.3.0
      with:
        context: .
        push: true
        tags: ${{ steps.set_docker_tags.outputs.DOCKER_TAGS }}
        labels: ${{ inputs.docker_labels }}
        build-args: |
          GITHUB_TOKEN=${{ steps.set_token.outputs.GITHUB_AUTH_TOKEN }}
